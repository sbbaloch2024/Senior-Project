{"version":3,"sources":["Layout/logo.png","Utilities/history.js","Utilities/handle-response.js","Services/authenticationService.js","Utilities/private-route.js","Home/Login.jsx","Home/Register.jsx","Home/Home.jsx","Layout/Header.jsx","Utilities/common.js","Utilities/auth-header.js","Services/chatService.js","Chat/ChatBox.jsx","Chat/Conversations.jsx","Chat/Users.jsx","Services/userService.js","Chat/Chat.jsx","components/CategoriesList.js","components/Categories.jsx","constants.js","components/Home2.jsx","components/AddProduct.jsx","components/ProductDetail.jsx","components/MyProducts.jsx","components/SearchResults.jsx","components/ReportForm.jsx","components/ReportsPage.jsx","components/CategoryPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","history","createBrowserHistory","useHandleResponse","enqueueSnackbar","useSnackbar","response","text","then","data","JSON","parse","ok","indexOf","status","authenticationService","logout","variant","error","message","statusText","Promise","reject","currentUserSubject","BehaviorSubject","localStorage","getItem","removeItem","next","currentUser","asObservable","value","PrivateRoute","_ref","component","Component","rest","React","createElement","Route","Object","assign","render","props","currentUserValue","Redirect","to","pathname","state","from","location","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","margin","Login","login","handleResponse","username","password","requestOptions","method","headers","body","stringify","fetch","process","REACT_APP_API_URL","user","console","log","setItem","userId","token","catch","useLogin","classes","className","Grid","container","item","Typography","align","Formik","initialValues","validationSchema","Yup","shape","required","max","min","onSubmit","_ref2","setStatus","setSubmitting","push","_ref3","handleSubmit","handleChange","values","touched","errors","TextField","id","textField","name","label","fullWidth","helperText","Boolean","onChange","type","Button","color","xs","Link","onClick","handleClick","href","Register","register","password2","useRegister","oneOf","validateOnChange","validateOnBlur","isValid","Home","page","setPage","useState","useEffect","Content","Container","maxWidth","root","flexGrow","title","appBar","height","backgroundColor","userDropdown","marginLeft","padding","breakpoints","down","fontFamily","searchInput","marginRight","justifyContent","borderRadius","borderColor","button","Header","anchorEl","setAnchorEl","dropdownOpen","setDropdownOpen","searchQuery","setSearchQuery","redirectTo","setRedirectTo","useHistory","AppBar","position","colorPrimary","Toolbar","src","logo","alt","style","placeholder","e","target","size","InputProps","startAdornment","InputAdornment","IconButton","async","searchURL","encodeURIComponent","json","products","FontAwesomeIcon","icon","faSearch","aria-owns","undefined","aria-haspopup","event","currentTarget","ArrowDropUpIcon","ArrowDropDownIcon","Menu","open","onClose","handleDropClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","handleLogout","handleAddProduct","handleMyAdds","handleChats","handleHome","handleReports","String","split","map","i","charAt","join","authHeader","Authorization","useGetConversationMessages","headerRow","maxHeight","zIndex","palette","primary","dark","messageContainer","alignContent","messagesRow","overflowY","newMessageRow","messageBubble","border","boxShadow","messageBubbleRight","inputRow","avatar","listItem","listItemRight","ChatBox","currentUserId","newMessage","setNewMessage","messages","setMessages","lastMessage","setLastMessage","getGlobalMessages","useGetGlobalMessages","sendGlobalMessage","global","err","useSendGlobalMessage","getConversationMessages","sendConversationMessage","useSendConversationMessage","chatBottom","useRef","reloadMessages","scrollToBottom","scope","conversationId","socketIOClient","on","res","_id","current","scrollIntoView","behavior","Paper","square","elevation","List","m","ListItem","key","classnames","fromObj","ListItemAvatar","Avatar","commonUtilites","ListItemText","secondary","Fragment","ref","preventDefault","SendIcon","subheader","cursor","globe","subheaderText","list","Conversations","conversations","setConversations","newConversation","setNewConversation","getConversations","useGetConversations","handleRecipient","recipients","length","socket","removeListener","setScope","Divider","c","setUser","recipientObj","Users","users","setUsers","newUser","setNewUser","getUsers","useGetUsers","u","minHeight","sidebar","Chat","tab","setTab","md","Tabs","newVal","indicatorColor","textColor","Tab","Categories","selectedCategory","setSelectedCategory","categories","index","handleCategoryClick","API_URL","REACT_APP_BASE_URL","Home2","setProducts","filteredProducts","setFilteredProducts","search","setSearch","isSearch","setIsSearch","fetchProducts","url","axios","get","alert","handleSearch","handleSearchClick","handleCategory","category","filtered","filter","product","pimage","pname","pdesc","price","AddProduct","setpname","setpdesc","setprice","setcategory","setpimage","pimage2","setpimage2","files","handleApi","navigator","geolocation","getCurrentPosition","formData","FormData","append","coords","latitude","toString","longitude","post","ProductDetail","activeImageIndex","setActiveImageIndex","setproduct","setuser","p","useParams","productId","switchImage","addedBy","handleChat","sellerId","existingConversation","conversation","Array","isArray","participants","find","includes","faComment","handleReport","faExclamationTriangle","handleContact","faInfoCircle","mobile","email","MyProducts","cproducts","setCProducts","isFetching","setIsFetching","toLowerCase","FaTrash","window","confirm","delete","prevProducts","prevCProducts","handleDelete","SearchResults","fetchData","ReportForm","reason","setReason","faExclamationCircle","rows","cols","reportedUserId","ReportsPage","reports","setReports","fetchReports","report","CategoryPage","catName","redirectToProduct","setRedirectToProduct","handleSearchChange","newFilteredProducts","handleProductClick","createMuiTheme","light","main","contrastText","background","default","typography","useNextVariants","App","ThemeProvider","CssBaseline","SnackbarProvider","maxSnack","autoHideDuration","Router","path","exact","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.570e7a82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5b6db504.png\";","import { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport default history;\n","import { authenticationService } from '../Services/authenticationService';\nimport { useSnackbar } from 'notistack';\n\nconst useHandleResponse = () => {\n    const { enqueueSnackbar } = useSnackbar();\n\n    const handleResponse = response => {\n        return response.text().then(text => {\n            const data = text && JSON.parse(text);\n            if (!response.ok) {\n                if ([401, 403].indexOf(response.status) !== -1) {\n                    authenticationService.logout();\n                    enqueueSnackbar('User Unauthorized', {\n                        variant: 'error',\n                    });\n                }\n\n                const error = (data && data.message) || response.statusText;\n                return Promise.reject(error);\n            }\n\n            return data;\n        });\n    };\n\n    return handleResponse;\n};\n\nexport default useHandleResponse;\n","import { BehaviorSubject } from 'rxjs';\nimport { useSnackbar } from 'notistack';\n\nimport useHandleResponse from '../Utilities/handle-response';\n\nconst currentUserSubject = new BehaviorSubject(\n    JSON.parse(localStorage.getItem('currentUser'))\n);\n\nexport const authenticationService = {\n    logout,\n    currentUser: currentUserSubject.asObservable(),\n    get currentUserValue() {\n        return currentUserSubject.value;\n    },\n};\n\nexport function useLogin() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const login = (username, password) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ username, password }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users/login`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .then(user => {\n                console.log(user)\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('userId', user.userId); \n                localStorage.setItem('jwtToken', user.token); \n\n                currentUserSubject.next(user);\n                return user;\n            })\n            .catch(function() {\n                enqueueSnackbar('Failed to Login', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return login;\n}\n\nexport function useRegister() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const register = (name, username, password, password2) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ name, username, password, password2 }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users/register`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .then(user => {\n                localStorage.setItem('currentUser', JSON.stringify(user));\n                localStorage.setItem('userId', user.userId); \n                localStorage.setItem('jwtToken', user.token); \n\n                currentUserSubject.next(user);\n\n                return user;\n            })\n            .catch(function(response) {\n                if (response) {\n                    enqueueSnackbar(response, {\n                        variant: 'error',\n                    });\n                } else {\n                    enqueueSnackbar('Failed to Register', {\n                        variant: 'error',\n                    });\n                }\n            });\n    };\n\n    return register;\n}\n\nfunction logout() {\n    localStorage.removeItem('currentUser');\n    currentUserSubject.next(null);\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { authenticationService } from '../Services/authenticationService';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => {\n            const currentUser = authenticationService.currentUserValue;\n            if (!currentUser) {\n                // not logged in so redirect to login page with the return url\n                return (\n                    <Redirect\n                        to={{ pathname: '/', state: { from: props.location } }}\n                    />\n                );\n            }\n\n            // authorised so return component\n            return <Component {...props} />;\n        }}\n    />\n);\n\nexport default PrivateRoute;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Formik } from 'formik';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as Yup from 'yup';\n\nimport history from '../Utilities/history';\nimport { useLogin } from '../Services/authenticationService';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Login = props => {\n    const login = useLogin();\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <Grid container>\n                <Grid item>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Sign in\n                    </Typography>\n                    <Formik\n                        initialValues={{\n                            username: '',\n                            password: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            username: Yup.string()\n                                .required('Username is required')\n                                .max(40, 'Username is too long'),\n                            password: Yup.string()\n                                .required('Password is required')\n                                .max(100, 'Password is too long')\n                                .min(6, 'Password too short'),\n                        })}\n                        onSubmit={(\n                            { username, password },\n                            { setStatus, setSubmitting }\n                        ) => {\n                            setStatus();\n                            login(username, password).then(\n                                () => {\n                                    const { from } = history.location.state || {\n                                        from: { pathname: '/home' },\n                                    };\n                                    history.push(from);\n                                },\n                                error => {\n                                    setSubmitting(false);\n                                    setStatus(error);\n                                }\n                            );\n                        }}\n                    >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            touched,\n                            errors,\n                        }) => (\n                            <form\n                                onSubmit={handleSubmit}\n                                className={classes.form}\n                            >\n                                <TextField\n                                    id=\"username\"\n                                    className={classes.textField}\n                                    name=\"username\"\n                                    label=\"Username\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={\n                                        touched.username ? errors.username : ''\n                                    }\n                                    error={\n                                        touched.username &&\n                                        Boolean(errors.username)\n                                    }\n                                    value={values.username}\n                                    onChange={handleChange}\n                                />\n                                <TextField\n                                    id=\"password\"\n                                    className={classes.textField}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={\n                                        touched.password ? errors.password : ''\n                                    }\n                                    error={\n                                        touched.password &&\n                                        Boolean(errors.password)\n                                    }\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth={true}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Login\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography>\n                        <Link\n                            onClick={() => props.handleClick('register')}\n                            href=\"#\"\n                        >\n                            Don't have an account?\n                        </Link>\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport TextField from '@material-ui/core/TextField';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport history from '../Utilities/history';\nimport { useRegister } from '../Services/authenticationService';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nconst Register = props => {\n    const register = useRegister();\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.paper}>\n            <Grid container>\n                <Grid item>\n                    <Typography component=\"h1\" variant=\"h5\" align=\"center\">\n                        Register\n                    </Typography>\n                    <Formik\n                        initialValues={{\n                            name: '',\n                            username: '',\n                            password: '',\n                            password2: '',\n                        }}\n                        validationSchema={Yup.object().shape({\n                            name: Yup.string()\n                                .required('Name is required')\n                                .max(40, 'Too Long!'),\n                            username: Yup.string()\n                                .required('Username is required')\n                                .max(40, 'Username address too long'),\n                            password: Yup.string()\n                                .required('Password is Required')\n                                .max(100, 'Password too long')\n                                .min(\n                                    6,\n                                    'Password should be at least 6 characters long'\n                                ),\n                            password2: Yup.string().oneOf(\n                                [Yup.ref('password'), null],\n                                'Passwords do not match'\n                            ),\n                        })}\n                        onSubmit={(\n                            { name, username, password, password2 },\n                            { setStatus, setSubmitting }\n                        ) => {\n                            setStatus();\n                            register(name, username, password, password2).then(\n                                user => {\n                                    const { from } = history.location.state || {\n                                        from: { pathname: '/home' },\n                                    };\n                                    history.push(from);\n                                },\n                                error => {\n                                    setSubmitting(false);\n                                    setStatus(error);\n                                }\n                            );\n                        }}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                    >\n                        {({\n                            handleSubmit,\n                            handleChange,\n                            values,\n                            touched,\n                            isValid,\n                            errors,\n                        }) => (\n                            <form\n                                onSubmit={handleSubmit}\n                                className={classes.form}\n                            >\n                                <TextField\n                                    id=\"name\"\n                                    className={classes.textField}\n                                    name=\"name\"\n                                    label=\"Name\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={touched.name ? errors.name : ''}\n                                    error={touched.name && Boolean(errors.name)}\n                                    value={values.name}\n                                    onChange={handleChange}\n                                />\n\n                                <TextField\n                                    id=\"username\"\n                                    className={classes.textField}\n                                    name=\"username\"\n                                    label=\"Username\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={\n                                        touched.username ? errors.username : ''\n                                    }\n                                    error={\n                                        touched.username &&\n                                        Boolean(errors.username)\n                                    }\n                                    value={values.username}\n                                    onChange={handleChange}\n                                />\n\n                                <TextField\n                                    id=\"password\"\n                                    className={classes.textField}\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={\n                                        touched.password ? errors.password : ''\n                                    }\n                                    error={\n                                        touched.password &&\n                                        Boolean(errors.password)\n                                    }\n                                    value={values.password}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                />\n\n                                <TextField\n                                    id=\"password2\"\n                                    className={classes.textField}\n                                    name=\"password2\"\n                                    label=\"Confirm Password\"\n                                    fullWidth={true}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    required={true}\n                                    helperText={\n                                        touched.password2\n                                            ? errors.password2\n                                            : ''\n                                    }\n                                    error={\n                                        touched.password2 &&\n                                        Boolean(errors.password2)\n                                    }\n                                    value={values.password2}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                />\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth={true}\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    Register\n                                </Button>\n                            </form>\n                        )}\n                    </Formik>\n                </Grid>\n                <Grid item xs={9}>\n                    <Typography>\n                        <Link\n                            onClick={() => props.handleClick('login')}\n                            href=\"#\"\n                        >\n                            Already have an account?\n                        </Link>\n                    </Typography>\n                </Grid>\n            </Grid>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState, useEffect } from 'react';\nimport Container from '@material-ui/core/Container';\n\nimport history from '../Utilities/history';\nimport Login from './Login';\nimport Register from './Register';\nimport { authenticationService } from '../Services/authenticationService';\n\nconst Home = () => {\n    const [page, setPage] = useState('login');\n\n    useEffect(() => {\n        if (authenticationService.currentUserValue) {\n            history.push('/home');\n            //history.push('/chat');\n\n            \n        }\n    }, []);\n\n    const handleClick = location => {\n        setPage(location);\n    };\n\n    let Content;\n\n    if (page === 'login') {\n        Content = <Login handleClick={handleClick} />;\n    } else {\n        Content = <Register handleClick={handleClick} />;\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            {Content}\n        </Container>\n    );\n};\n\nexport default Home;\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport { Redirect } from 'react-router-dom';\nimport { authenticationService } from '../Services/authenticationService';\nimport history from '../Utilities/history';\nimport logo from './logo.png';\nimport { useHistory } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport MenuIcon from '@material-ui/icons/Menu'; // Import the Menu icon component\nimport IconButton from '@material-ui/core/IconButton'; // Import IconButton\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        display: 'flex',\n        color: 'black',\n        \n    },\n    appBar: {\n        height: '80px',\n        backgroundColor: 'white !important'\n        \n    },\n    userDropdown: {\n        marginTop: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        padding: theme.spacing(1),\n        [theme.breakpoints.down('xs')]: {\n            marginLeft: 'auto',\n        },\n        color: 'black',\n        fontFamily: 'Times New Roman',\n    },\n    searchInput: {\n        color: 'black',\n        marginRight: theme.spacing(40),\n        marginTop: theme.spacing(1),\n        justifyContent: 'center', // Center the logo and link\n        borderRadius: '15px',\n        '& .MuiOutlinedInput-root': {\n            '& fieldset': {\n                borderColor: 'black', // Removes the border\n                borderRadius: '25px',\n            },\n            '&:hover fieldset': {\n                borderColor: 'black', // Removes the border on hover\n                borderRadius: '25px'\n            },\n            '&.Mui-focused fieldset': {\n                borderColor: 'black', // Removes the border on focus\n                borderRadius: '25px',\n            },\n        },\n        '& .MuiInputBase-input': {\n            padding: theme.spacing(1), // Adjust padding to match your design\n        },\n        width: '100%', // This will make the search input full-width within its container\n        maxWidth: '500px', \n        color: 'black',\n        \n\n\n    },\n    button: {\n        // If you have a button class already, adjust the marginTop here\n        marginTop: theme.spacing(1), // Adjust this value as needed to push the buttons down\n        color: 'black',\n        fontFamily: 'Times New Roman', // Replace \"Font Name\" with your font name\n\n        // ... any other button styles ...\n    },\n}));\n\nconst Header = () => {\n    const [currentUser] = useState(authenticationService.currentUserValue);\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [searchQuery, setSearchQuery] = useState('');\n    const [redirectTo, setRedirectTo] = useState(null);  //\n    const history = useHistory();\n\n    const handleDropClose = () => {\n        setDropdownOpen(false);\n        setAnchorEl(null);\n    };\n\n   \n\n    const handleDropOpen = event => {\n        setDropdownOpen(true);\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleLogout = () => {\n        authenticationService.logout();\n        history.push('/');\n    };\n\n    \n    const handleSearch = async () => {\n        const searchURL = `http://localhost:4000/api/products/search?search=${encodeURIComponent(searchQuery)}`;\n        try {\n            const response = await fetch(searchURL);\n            const data = await response.json();\n            console.log(data)\n            if (response.ok) {\n                console.log('Search results:', data.products); \n                history.push(`/search-results/${encodeURIComponent(searchQuery)}`);\n\n\n\n            } else {\n                console.error('Search failed:', data.message);\n            }\n        } catch (error) {\n            console.error('Network error:', error);\n        }\n    };\n\n    const arrowIcon = () => {\n        return dropdownOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />;\n    };\n\n    const handleAddProduct = () => { // Define function to handle product addition\n        history.push('/add-product');\n    };\n\n    const handleMyAdds = () => { // Define function to navigate to user's ads\n        history.push(`/my-products/${currentUser.userId}`);\n    };\n\n    const handleChats = () => { // Define function to navigate to chat page\n        history.push('/chat');\n    };\n\n    const handleHome = () => { // Define function to navigate to home page\n        history.push('/home');\n    };\n\n    const handleReports = () => {\n        history.push(`/reports/${currentUser.userId}`);\n    }\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" classes={{ colorPrimary: classes.appBar }}>\n                <Toolbar>\n                    <Link href=\"/\" className={classes.title}>\n                        <img src={logo} alt=\"Logo\" style={{ width: '200px', height: 'auto',  marginTop: '10px', }} />\n                    </Link>\n                    <TextField\n                            placeholder=\"Search and hit the search icon\"\n                            value={searchQuery}\n                            onChange={e => setSearchQuery(e.target.value)}\n                            className={classes.searchInput}\n                            variant=\"outlined\"\n                            size=\"small\"\n                            style={{ backgroundColor: '#f9f9f9' }} \n                            InputProps={{\n                                startAdornment: (\n                                    <InputAdornment position=\"start\">\n                                    <IconButton onClick={handleSearch}>  {/* Add this line to make the icon clickable */}\n                                        <FontAwesomeIcon icon={faSearch} />\n                                    </IconButton>\n                                </InputAdornment>\n                                ),\n                            }}\n                        />\n                    <Button\n                        aria-owns={anchorEl ? 'simple-menu' : undefined}\n                        aria-haspopup=\"true\"\n                        onClick={handleDropOpen}\n                        className={classes.userDropdown}\n                        color=\"inherit\"\n                        size=\"large\"\n                    >\n          \n                        {currentUser.name}\n          \n                        {arrowIcon()}\n                    </Button>\n                    <Menu\n                        id=\"simple-menu\"\n                        anchorEl={anchorEl}\n                        open={Boolean(anchorEl)}\n                        onClose={handleDropClose}\n                        getContentAnchorEl={null}\n                        anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'right',\n                        }}\n                        transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'right',\n                        }}\n                    >\n                        <MenuItem onClick={handleLogout}>Logout</MenuItem>\n                        <MenuItem onClick={handleAddProduct}>Add Product</MenuItem>\n                        <MenuItem onClick={handleMyAdds}>My Adds</MenuItem>\n                        <MenuItem onClick={handleChats}>Chats</MenuItem>\n                        <MenuItem onClick={handleHome}>Home</MenuItem>\n                        <MenuItem onClick={handleReports}>Reports</MenuItem>\n                    </Menu>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default Header;\n","export default {\n  getInitialsFromName: (name) => {\n    const letters = String(name)\n      .split(\" \")\n      .map((i) => i.charAt(0));\n    return letters.join(\"\");\n  },\n};\n","import { authenticationService } from '../Services/authenticationService';\n\nfunction authHeader() {\n    const currentUser = authenticationService.currentUserValue;\n    if (currentUser && currentUser.token) {\n        return {\n            Authorization: `${currentUser.token}`,\n            'Content-Type': 'application/json',\n        };\n    } else {\n        return {};\n    }\n}\n\nexport default authHeader;\n","import useHandleResponse from '../Utilities/handle-response';\nimport authHeader from '../Utilities/auth-header';\nimport { useSnackbar } from 'notistack';\n\n// Receive global messages\nexport function useGetGlobalMessages() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getGlobalMessages = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/global`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load Global Chat', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getGlobalMessages;\n}\n\n// Send a global message\nexport function useSendGlobalMessage() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const sendGlobalMessage = body => {\n        const requestOptions = {\n            method: 'POST',\n            headers: authHeader(),\n            body: JSON.stringify({ body: body, global: true }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/global`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(err => {\n                console.log(err);\n                enqueueSnackbar('Could send message', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return sendGlobalMessage;\n}\n\n// Get list of users conversations\nexport function useGetConversations() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getConversations = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/conversations`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load chats', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getConversations;\n}\n\n// get conversation messages based on\n// to and from id's\nexport function useGetConversationMessages() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getConversationMessages = id => {\n        return fetch(\n            `${\n                process.env.REACT_APP_API_URL\n            }/api/messages/conversations/query?userId=${id}`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load chats', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getConversationMessages;\n}\n\nexport function useSendConversationMessage() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n\n    const sendConversationMessage = (id, body) => {\n        const requestOptions = {\n            method: 'POST',\n            headers: authHeader(),\n            body: JSON.stringify({ to: id, body: body }),\n        };\n\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/messages/`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(err => {\n                console.log(err);\n                enqueueSnackbar('Could send message', {\n                    variant: 'error',\n                });\n            });\n    };\n\n    return sendConversationMessage;\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport socketIOClient from \"socket.io-client\";\nimport classnames from \"classnames\";\nimport commonUtilites from \"../Utilities/common\";\nimport {\n  useGetGlobalMessages,\n  useSendGlobalMessage,\n  useGetConversationMessages,\n  useSendConversationMessage,\n} from \"../Services/chatService\";\nimport { authenticationService } from \"../Services/authenticationService\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n  },\n  headerRow: {\n    maxHeight: 60,\n    zIndex: 5,\n  },\n  paper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    color: theme.palette.primary.dark,\n  },\n  messageContainer: {\n    height: \"100%\",\n    display: \"flex\",\n    alignContent: \"flex-end\",\n  },\n  messagesRow: {\n    maxHeight: \"calc(100vh - 184px)\",\n    overflowY: \"auto\",\n  },\n  newMessageRow: {\n    width: \"100%\",\n    padding: theme.spacing(0, 2, 1),\n  },\n  messageBubble: {\n    padding: 10,\n    border: \"1px solid white\",\n    backgroundColor: \"white\",\n    borderRadius: \"0 10px 10px 10px\",\n    boxShadow: \"-3px 4px 4px 0px rgba(0,0,0,0.08)\",\n    marginTop: 8,\n    maxWidth: \"40em\",\n  },\n  messageBubbleRight: {\n    borderRadius: \"10px 0 10px 10px\",\n  },\n  inputRow: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n  },\n  form: {\n    width: \"100%\",\n  },\n  avatar: {\n    margin: theme.spacing(1, 1.5),\n  },\n  listItem: {\n    display: \"flex\",\n    width: \"100%\",\n  },\n  listItemRight: {\n    flexDirection: \"row-reverse\",\n  },\n}));\n\nconst ChatBox = (props) => {\n  const [currentUserId] = useState(\n    authenticationService.currentUserValue.userId\n  );\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [lastMessage, setLastMessage] = useState(null);\n\n  const getGlobalMessages = useGetGlobalMessages();\n  const sendGlobalMessage = useSendGlobalMessage();\n  const getConversationMessages = useGetConversationMessages();\n  const sendConversationMessage = useSendConversationMessage();\n\n  let chatBottom = useRef(null);\n  const classes = useStyles();\n\n  useEffect(() => {\n    reloadMessages();\n    scrollToBottom();\n  }, [lastMessage, props.scope, props.conversationId]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setLastMessage(data));\n  }, []);\n\n  const reloadMessages = () => {\n    if (props.scope === \"Global Chat\") {\n      getGlobalMessages().then((res) => {\n        setMessages(res);\n      });\n    } else if (props.scope !== null && props.conversationId !== null) {\n      getConversationMessages(props.user._id).then((res) => setMessages(res));\n    } else {\n      setMessages([]);\n    }\n  };\n\n  const scrollToBottom = () => {\n    chatBottom.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (props.scope === \"Global Chat\") {\n      sendGlobalMessage(newMessage).then(() => {\n        setNewMessage(\"\");\n      });\n    } else {\n      sendConversationMessage(props.user._id, newMessage).then((res) => {\n        setNewMessage(\"\");\n      });\n    }\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12} className={classes.headerRow}>\n        <Paper className={classes.paper} square elevation={2}>\n          <Typography color=\"inherit\" variant=\"h6\">\n            {props.scope}\n          </Typography>\n        </Paper>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container className={classes.messageContainer}>\n          <Grid item xs={12} className={classes.messagesRow}>\n            {messages && (\n              <List>\n                {messages.map((m) => (\n                  <ListItem\n                    key={m._id}\n                    className={classnames(classes.listItem, {\n                      [`${classes.listItemRight}`]:\n                        m.fromObj[0]._id === currentUserId,\n                    })}\n                    alignItems=\"flex-start\"\n                  >\n                    <ListItemAvatar className={classes.avatar}>\n                      <Avatar>\n                        {commonUtilites.getInitialsFromName(m.fromObj[0].name)}\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      classes={{\n                        root: classnames(classes.messageBubble, {\n                          [`${classes.messageBubbleRight}`]:\n                            m.fromObj[0]._id === currentUserId,\n                        }),\n                      }}\n                      primary={m.fromObj[0] && m.fromObj[0].name}\n                      secondary={<React.Fragment>{m.body}</React.Fragment>}\n                    />\n                  </ListItem>\n                ))}\n              </List>\n            )}\n            <div ref={chatBottom} />\n          </Grid>\n          <Grid item xs={12} className={classes.inputRow}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n              <Grid\n                container\n                className={classes.newMessageRow}\n                alignItems=\"flex-end\"\n              >\n                <Grid item xs={11}>\n                  <TextField\n                    id=\"message\"\n                    label=\"Message\"\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={newMessage}\n                    onChange={(e) => setNewMessage(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={1}>\n                  <IconButton type=\"submit\">\n                    <SendIcon />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </form>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ChatBox;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetConversations } from \"../Services/chatService\";\nimport { authenticationService } from \"../Services/authenticationService\";\nimport commonUtilites from \"../Utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n}));\n\nconst Conversations = (props) => {\n  const classes = useStyles();\n  const [conversations, setConversations] = useState([]);\n  const [newConversation, setNewConversation] = useState(null);\n  const getConversations = useGetConversations();\n\n  // Returns the recipient name that does not\n  // belong to the current user.\n  const handleRecipient = (recipients) => {\n    for (let i = 0; i < recipients.length; i++) {\n      if (\n        recipients[i].username !==\n        authenticationService.currentUserValue.username\n      ) {\n        return recipients[i];\n      }\n    }\n    return null;\n  };\n\n  useEffect(() => {\n    getConversations().then((res) => setConversations(res));\n  }, [newConversation]);\n\n  useEffect(() => {\n    let socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"messages\", (data) => setNewConversation(data));\n\n    return () => {\n      socket.removeListener(\"messages\");\n    };\n  }, []);\n\n  return (\n    <List className={classes.list}>\n      \n      <ListItem\n        classes={{ root: classes.subheader }}\n        onClick={() => {\n          props.setScope(\"Global Chat\");\n        }}\n      >\n     \n        <ListItemText className={classes.subheaderText} primary=\"Chat with Seller\" />\n      </ListItem>\n      <Divider />\n\n      {conversations && (\n        <React.Fragment>\n          {conversations.map((c) => (\n            \n            <ListItem\n              className={classes.listItem}\n              key={c._id}\n              button\n              onClick={() => {\n                props.setUser(handleRecipient(c.recipientObj));\n                props.setScope(handleRecipient(c.recipientObj).name);\n              }}\n            >\n              <ListItemAvatar>\n                <Avatar>\n                  {commonUtilites.getInitialsFromName(\n                    handleRecipient(c.recipientObj).name\n                  )}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={handleRecipient(c.recipientObj).name}\n                secondary={<React.Fragment>{c.lastMessage}</React.Fragment>}\n              />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Conversations;\n","import React, { useState, useEffect } from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport socketIOClient from \"socket.io-client\";\n\nimport { useGetUsers } from \"../Services/userService\";\nimport commonUtilites from \"../Utilities/common\";\n\nconst useStyles = makeStyles((theme) => ({\n  subheader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    cursor: \"pointer\",\n  },\n  globe: {\n    backgroundColor: theme.palette.primary.dark,\n  },\n  subheaderText: {\n    color: theme.palette.primary.dark,\n  },\n  list: {\n    maxHeight: \"calc(100vh - 112px)\",\n    overflowY: \"auto\",\n  },\n  avatar: {\n    margin: theme.spacing(0, 3, 0, 1),\n  },\n}));\n\nconst Users = (props) => {\n  const classes = useStyles();\n  const [users, setUsers] = useState([]);\n  const [newUser, setNewUser] = useState(null);\n  const getUsers = useGetUsers();\n\n  useEffect(() => {\n    getUsers().then((res) => setUsers(res));\n  }, [newUser]);\n\n  useEffect(() => {\n    const socket = socketIOClient(process.env.REACT_APP_API_URL);\n    socket.on(\"users\", (data) => {\n      setNewUser(data);\n    });\n  }, []);\n\n  return (\n    <List className={classes.list}>\n\n      {users && (\n        <React.Fragment>\n     \n          {users.map((u) => (\n            <ListItem\n              className={classes.listItem}\n              key={u._id}\n              onClick={() => {\n                props.setUser(u);\n                props.setScope(u.name);\n              }}\n              button\n            >\n              <ListItemAvatar className={classes.avatar}>\n                <Avatar>{commonUtilites.getInitialsFromName(u.name)}</Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={u.name} />\n            </ListItem>\n          ))}\n        </React.Fragment>\n      )}\n    </List>\n  );\n};\n\nexport default Users;\n","import useHandleResponse from '../Utilities/handle-response';\nimport authHeader from '../Utilities/auth-header';\nimport { useSnackbar } from 'notistack';\n\nexport function useGetUsers() {\n    const { enqueueSnackbar } = useSnackbar();\n    const handleResponse = useHandleResponse();\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader(),\n    };\n\n    const getUsers = () => {\n        return fetch(\n            `${process.env.REACT_APP_API_URL}/api/users`,\n            requestOptions\n        )\n            .then(handleResponse)\n            .catch(() =>\n                enqueueSnackbar('Could not load Users', {\n                    variant: 'error',\n                })\n            );\n    };\n\n    return getUsers;\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Header from '../Layout/Header';\nimport ChatBox from './ChatBox';\nimport Conversations from './Conversations';\nimport Users from './Users';\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        minHeight: 'calc(100vh - 64px)',\n        borderRadius: 0,\n    },\n    sidebar: {\n        zIndex: 8,\n    },\n    subheader: {\n        display: 'flex',\n        alignItems: 'center',\n        cursor: 'pointer',\n    },\n    globe: {\n        backgroundColor: theme.palette.primary.dark,\n    },\n    subheaderText: {\n        color: theme.palette.primary.dark,\n    },\n}));\n\nconst Chat = () => {\n    const [scope, setScope] = useState('Global Chat');\n    const [tab, setTab] = useState(0);\n    const [user, setUser] = useState(null);\n    const classes = useStyles();\n\n    const handleChange = (e, newVal) => {\n        setTab(newVal);\n    };\n\n    return (\n        <React.Fragment>\n            <Header />\n            <Grid container>\n                <Grid item md={4} className={classes.sidebar}>\n                    <Paper className={classes.paper} square elevation={5}>\n                        <Paper square>\n                            <Tabs\n                                onChange={handleChange}\n                                variant=\"fullWidth\"\n                                value={tab}\n                                indicatorColor=\"primary\"\n                                textColor=\"primary\"\n                            >\n                                <Tab label=\"Chats\" />\n                                <Tab label=\"Users\" />\n                            </Tabs>\n                        </Paper>\n                        {tab === 0 && (\n                            <Conversations\n                                setUser={setUser}\n                                setScope={setScope}\n                            />\n                        )}\n                        {tab === 1 && (\n                            <Users setUser={setUser} setScope={setScope} />\n                        )}\n                    </Paper>\n                </Grid>\n                {scope !== 'Global Chat' && (\n                    <Grid item md={8}>\n                        <ChatBox scope={scope} user={user} />\n                    </Grid>\n                )}\n            </Grid>\n        </React.Fragment>\n    );\n};\n\nexport default Chat;\n","\nlet Categories = ['All Categories','Bikes', 'Mobiles', 'Tops', 'Jackets', 'Shoes', 'Electronics']\n\nexport default Categories;","import React from 'react';\nimport { useState } from 'react'; // Import useState\nimport { Redirect } from 'react-router-dom';\nimport './Header.css';\nimport categories from './CategoriesList';\nimport './Categories.css';\n\n\n\nfunction Categories(props) {\n    const [selectedCategory, setSelectedCategory] = useState(null); // State to track selected category\n    const [redirectTo, setRedirectTo] = useState(null); // State for managing redirection\n\n    const handleCategoryClick = (item) => {\n        setSelectedCategory(item); // Update the selected category state\n        setRedirectTo('/category/' + item); // Set the redirection path\n    };\n\n    // If redirectTo is set, render the Redirect component to redirect\n    if (redirectTo) {\n        return <Redirect to={redirectTo} />;\n    }\n\n    return (\n        <div className='cat-container'>\n            <div>\n                {categories && categories.length > 0 &&\n                    categories.map((item, index) => {\n                        return (\n                            <span\n                                onClick={() => handleCategoryClick(item)}\n                                key={index}\n                                className={`category ${selectedCategory === item ? 'selected' : ''}`}> \n                                {item} \n                            </span>\n                        );\n                    })}\n            </div>\n        </div>\n    );\n}\n\nexport default Categories;","\nconst API_URL = process.env.NODE_ENV != 'development' ?\n    process.env.REACT_APP_BASE_URL :\n    'https://backend-fyq5htfc4-suleman-balochs-projects.vercel.app'\n\nconsole.log(process.env, \"API_URL\");\n\nexport default API_URL;","import React from \"react\"\n\nimport { useEffect, useState } from \"react\";\nimport Header from '../Layout/Header';\nimport { Link, Redirect } from 'react-router-dom';  // Using Redirect from react-router-dom v5\n\nimport axios from \"axios\";\nimport Categories from \"./Categories\";\nimport { FaHeart } from \"react-icons/fa\";\nimport API_URL from \"../constants\";\nimport './Home2.css'; // Make sure to import the CSS file\n\n\n\nfunction Home2() {\n\n\n    const [products, setProducts] = useState([]);\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [search, setSearch] = useState('');\n    const [isSearch, setIsSearch] = useState(false);\n    const [redirectTo, setRedirectTo] = useState(null);  // State to manage redirection\n\n\n    // Fetch all products on component mount\n    useEffect(() => {\n        fetchProducts();\n        if (redirectTo) {\n            return <Redirect to={redirectTo} />;\n        }\n    }, []);\n\n    const fetchProducts = () => {\n        const url = `${API_URL}/api/products/get-products`;\n        console.log(url)\n        axios.get(url)\n            .then((res) => {\n                if (res.data.products) {\n                    setProducts(res.data.products);\n                    setFilteredProducts(res.data.products); // Initially show all products\n                }\n            })\n            .catch((err) => {\n                alert('no.');\n            });\n    };\n\n    const handleSearch = (value) => {\n        setSearch(value);\n    };\n\n    const handleSearchClick = () => {\n        if (!search) {\n            setFilteredProducts(products);\n            setIsSearch(false);\n            return;\n        }\n\n        const url = `${API_URL}/search?search=${search}&loc=${localStorage.getItem('userLoc')}`;\n        axios.get(url)\n            .then((res) => {\n                setFilteredProducts(res.data.products);\n                setIsSearch(true);\n            })\n            .catch((err) => {\n                alert('Server Error.');\n            });\n    };\n\n    const handleCategory = (category) => {\n        if (category === 'All') {\n            setFilteredProducts(products);\n        } else {\n            const filtered = products.filter((item) => item.category === category);\n            setFilteredProducts(filtered);\n        }\n        setIsSearch(false); // Reset search state when category is changed\n    };\n\n    const handleLike = (productId, e) => {\n        e.stopPropagation(); // Prevent navigation to product detail page when liking a product\n        let userId = localStorage.getItem('userId');\n\n        if (!userId) {\n            alert('Please Login first.');\n            return;\n        }\n\n        const url = `${API_URL}/like-product`;\n        const data = { userId, productId };\n        console.log(localStorage.getItem('userId'));\n        axios.post(url, data)\n            .then((res) => {\n                if (res.data.message) {\n                    alert('Liked.');\n                }\n            })\n            .catch((err) => {\n                alert('Server Error.');\n            });\n    };\n\n    const handleProductClick = (id) => {\n        //navigate(`/product/${id}`);\n    };\n\n\n    return (\n        <div>\n            <Header search={search} handleSearch={handleSearch} handleClick={handleSearchClick} />\n            <Categories handleCategory={handleCategory} />\n            <div className=\"d-flex justify-content-center flex-wrap\">\n                {filteredProducts.map((product, index) => (\n                    console.log(`${API_URL}/uploads/${product.pimage}`),\n                    <div key={product._id} className=\"card m-3\" onClick={() => handleProductClick(product._id)}>\n                       \n                       <Link to={`/product/${product._id}`}>\n                            <img width=\"280px\" height=\"250px\" src={`${API_URL}/uploads/${product.pimage}`} alt={product.pname} />\n                        </Link>\n                        <div className=\"quicklook\">Quicklook</div>\n                        <h2 className=\"new\">{product.pname}</h2>\n                        <p className=\"new\">{product.pdesc}</p>\n                        <h3 className=\"new\">${product.price} </h3>\n                       \n\n                    </div>\n                ))}\n                {filteredProducts.length === 0 && !isSearch && <h5>No Products Found</h5>}\n            </div>\n        </div>\n    );\n\n   /*\n\n    return (\n        <div>\n            heeferferllo\n        </div>\n    )\n    */\n}\n\nexport default Home2;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../Layout/Header\";\nimport { Redirect, Link } from \"react-router-dom\"; // Import Redirect instead of useNavigate\nimport axios from \"axios\";\nimport categories from \"./CategoriesList\";\nimport API_URL from \"../constants\";\nimport { useRadioGroup } from \"@material-ui/core\";\n\n\nfunction AddProduct() {\n    const [redirectTo, setRedirectTo] = useState(null); // State for redirection\n    const [pname, setpname] = useState('');\n    const [pdesc, setpdesc] = useState('');\n    const [price, setprice] = useState('');\n    const [category, setcategory] = useState('');\n    const [pimage, setpimage] = useState('');\n    const [pimage2, setpimage2] = useState('');\n\n    useEffect(() => {\n       \n    }, []);\n\n    const handleApi = () => {\n        navigator.geolocation.getCurrentPosition((position) => {\n            const formData = new FormData();\n            formData.append('pname', pname);\n            formData.append('pdesc', pdesc);\n            formData.append('price', price);\n            formData.append('category', category);\n            formData.append('userId', localStorage.getItem('userId'));\n            formData.append('plat', position.coords.latitude.toString());\n            formData.append('plong', position.coords.longitude.toString());\n   \n            // Ensure `pimage` and `pimage2` are referencing actual File objects\n            // Example: assuming `pimage` and `pimage2` are state variables tied to <input type=\"file\" onChange={...}/>\n            if (pimage && pimage2) {\n                formData.append('pimage', pimage);\n                formData.append('pimage2', pimage2);\n            }\n    \n            const url = API_URL + '/api/products/add-product';\n            console.log(url); // This will log the full API URL to help verify correctness\n    \n            axios.post(url, formData)\n                .then((res) => {\n                    alert(res.data.message);\n                    setRedirectTo('/'); // Navigate to home after successful API call\n                })\n                .catch((err) => {\n                    // Log the error or display a message\n                    console.error('Error submitting form:', err);\n                    alert('Could not find endpoint or other error: ' + err.message);\n                });\n        }, (error) => {\n            // Handle geolocation errors here\n            console.error('Geolocation error:', error);\n            alert('Error getting location: ' + error.message);\n        });\n    };\n    if (redirectTo) {\n        return <Redirect to={redirectTo} />; // Render Redirect component based on redirectTo state\n    }\n\n    return (\n        <div>\n            <Header />\n            <div className=\"p-3\">\n                <h2> ADD PRODUCT HERE : </h2>\n                <label> Product Name </label>\n                <input className=\"form-control\" type=\"text\" value={pname}\n                    onChange={(e) => setpname(e.target.value)} />\n                <label> Product Description </label>\n                <input className=\"form-control\" type=\"text\" value={pdesc}\n                    onChange={(e) => setpdesc(e.target.value)} />\n                <label> Product Price </label>\n                <input className=\"form-control\" type=\"text\" value={price}\n                    onChange={(e) => setprice(e.target.value)} />\n                <label> Product Category </label>\n                <select className=\"form-control\" value={category}\n                    onChange={(e) => setcategory(e.target.value)}>\n                    <option> Bikes </option>\n                    <option> Mobiles </option>\n                    <option> Cloth </option>\n                    {categories && categories.length > 0 && categories.map((item, index) => (\n                        <option key={'option' + index}> {item} </option>\n                    ))}\n                </select>\n                <label> Product Image </label>\n                <input className=\"form-control\" type=\"file\"\n                    onChange={(e) => setpimage(e.target.files[0])} />\n                <label> Product Second Image </label>\n                <input className=\"form-control\" type=\"file\"\n                    onChange={(e) => setpimage2(e.target.files[0])} />\n                <button onClick={handleApi} className=\"btn btn-primary mt-3\"> SUBMIT </button>\n            </div>\n        </div>\n    );\n}\n\nexport default AddProduct;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../Layout/Header\";\nimport API_URL from \"../constants\";\nimport './ProductDetails.css'; // Make sure to import the CSS file\nimport { Link, Redirect } from 'react-router-dom';  // Using Redirect from react-router-dom v5\nimport { useHistory } from \"react-router-dom\";\nimport { useGetConversationMessages } from '../Services/chatService';\nimport { faComment } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\n\n\n\n\n\n\n\nfunction ProductDetail() {\n    const history = useHistory();\n\n    const getConversationMessages = useGetConversationMessages(); \n    const [activeImageIndex, setActiveImageIndex] = useState(0); // State to manage active image index\n    const [product, setproduct] = useState();\n    const [user, setuser] = useState();\n    const p = useParams();\n    const [redirectTo, setRedirectTo] = useState(null);  // State to manage redirection\n\n   \n    useEffect(() => {\n        const url = API_URL + '/api/products/product/' + p.productId;\n        console.log(url)\n     \n        axios.get(url)\n            .then((res) => {\n                if (res.data.product) {\n                    setproduct(res.data.product);\n\n                }\n            })\n            .catch((err) => {\n                alert('Server Err.');\n            });\n    }, [p.productId]);\n\n    if (redirectTo) {\n        return <Redirect to={redirectTo} />;\n    }\n\n    \n    const switchImage = (index) => {\n        setActiveImageIndex(index);\n    }\n\n    \n\n    const handleChat = (sellerId) => {\n        const userId = localStorage.getItem('userId'); // Check user is logged in\n        if (!userId) {\n            console.error('User is not logged in');\n            return;\n        }\n    \n        // Fetch conversation messages\n        getConversationMessages(sellerId).then(conversations => {\n            // Ensure that conversations is an array and filter out any that don't meet expected structure\n            const validConversations = conversations.filter(conversation => Array.isArray(conversation.participants));\n    \n            // Find an existing conversation that includes the sellerId in its participants\n            const existingConversation = validConversations.find(conversation => \n                conversation.participants.includes(sellerId)\n            );\n    \n            if (existingConversation && existingConversation._id) {\n                // Redirect to an existing conversation\n                history.push(`/chat/${existingConversation._id}`);\n            } else {\n                // No existing conversation found, redirect to create a new chat\n                history.push(`/chat/new?userId=${sellerId}`);\n            }\n        }).catch(error => {\n            console.error('Error fetching conversation details:', error);\n            alert('Failed to retrieve conversation details');\n        });\n    };\n\n    const handleReport = (addedBy) => {\n        history.push(`/report/${addedBy}`);\n    };\n    \n    const handleContact = (addedBy) => {\n        const url = `${API_URL}/api/users/get-user/${addedBy}`;\n        console.log(url)  // Updated URL to match the backend\n        axios.get(url)\n            .then((res) => {\n                if (res.data.user) {\n                    setuser(res.data.user);\n                } else {\n                    alert(res.data.message);  // Show the message from the server (e.g., User not found)\n                }\n            })\n            .catch((err) => {\n                alert('Server Err: ' + err.message);  // Displaying more detailed error\n            });\n    };\n    \n    return (\n        <div>\n        <Header />\n        <div className=\"product-detail-page\">\n        \n            <div className=\"product-detail-container\">\n                <div className=\"product-content\">\n                {product && (\n                            <div className=\"product-images-container\">\n                                {/* Display active image based on activeImageIndex */}\n                                {/* Arrows to switch between images */}\n                                <div className=\"image-wrapper\">\n                                    <span className=\"arrow left-arrow\" onClick={() => switchImage(activeImageIndex === 0 ? 1 : 0)}>&#9664;</span>\n                                    <img className=\"product-image\" src={API_URL + '/uploads/' + (activeImageIndex === 0 ? product.pimage : product.pimage2)} alt={product.pname} />\n                                    <span className=\"arrow right-arrow\" onClick={() => switchImage(activeImageIndex === 1 ? 0 : 1)}>&#9654;</span>\n                                </div>\n                            </div>\n                        )}\n                    <div className=\"product-info\">\n                    <h3 className=\"product-name\">{product?.pname} | {product?.category}</h3>\n\n                        <h3 className=\"product-price\">$ {product?.price}</h3>\n                        <h2 className=\"product-description\">{product?.pdesc}</h2>\n                        \n                  \n               \n                        {product?.addedBy && (\n                            \n                            <button className=\"contact-button\" onClick={() => handleChat(product.addedBy)}>\n                                      <FontAwesomeIcon icon={faComment} /> \n                             \n                                      <span className=\"icon-text\">Chat with Seller</span>\n                            </button>\n                        )}\n                         <button className=\"contact-button2\" onClick={() => handleReport(product.addedBy)}>\n                         <FontAwesomeIcon icon={faExclamationTriangle} />\n\n                         <span className=\"icon-text\">Report Buyer</span>\n                                </button>\n                   \n                        \n\n{product?.addedBy && (\n                            <button className=\"contact-button2\" onClick={() => handleContact(product.addedBy)}>\n                                    <FontAwesomeIcon icon={faInfoCircle} />\n                                    <span className=\"icon-text\">Show  Details</span>\n                            </button>\n                            \n                        )}\n                        {user && (\n                            <div className=\"user-info\">\n                                <h4 className=\"username\">{user.username}</h4>\n                                <p className=\"user-contact\">{user.mobile}</p>\n                                <p className=\"user-email\">{user.email}</p>\n                            </div>\n                        )}\n\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default ProductDetail;\n","import React from \"react\"\nimport { useEffect, useState } from \"react\";\nimport Header from \"../Layout/Header\";\nimport axios from \"axios\";\nimport Categories from \"./Categories\";\nimport { FaHeart, FaTrash } from \"react-icons/fa\"; // Import FaTrash for the delete icon\nimport API_URL from \"../constants\";\n\nfunction MyProducts() {\n    const [products, setProducts] = useState([]);\n    const [cproducts, setCProducts] = useState([]);\n    const [search, setSearch] = useState('');\n    const [isFetching, setIsFetching] = useState(false); // flag to indicate fetching\n\n    useEffect(() => {\n        const userId = localStorage.getItem('userId');\n        \n        \n        if (!isFetching) { // Check if we're already fetching\n            setIsFetching(true); // Set the flag to prevent future fetches\n            const url = `${API_URL}/api/products/my-products/${userId}`;\n\n            axios.get(url)\n                .then((res) => {\n                    if (res.data.products) {\n                        setProducts(res.data.products);\n                        setCProducts(res.data.products);\n                    }\n                    setIsFetching(false); // Reset the flag after fetching\n                })\n                .catch((err) => {\n                    alert('Server error. Please try again later.');\n                    setIsFetching(false); // Reset the flag if there's an error\n                });\n        }\n    }, []);\n\n    const handleSearch = (value) => {\n        setSearch(value);\n    };\n\n    const handleClick = () => {\n        let filteredProducts = products.filter((item) => {\n            return item.pname.toLowerCase().includes(search.toLowerCase()) ||\n                item.pdesc.toLowerCase().includes(search.toLowerCase()) ||\n                item.category.toLowerCase().includes(search.toLowerCase());\n        });\n        setCProducts(filteredProducts);\n    };\n\n    const handleCategory = (value) => {\n        let filteredProducts = products.filter((item) => {\n            return item.category === value;\n        });\n        setCProducts(filteredProducts);\n    };\n\n    const handleLike = (productId) => {\n        let userId = localStorage.getItem('userId');\n\n        const url = `${API_URL}/like-product`;\n        const data = { userId, productId };\n        axios.post(url, data)\n            .then((res) => {\n                if (res.data.message) {\n                    alert('Liked.');\n                }\n            })\n            .catch((err) => {\n                alert('Server error. Please try again later.');\n            });\n    };\n\n    // Function to handle product deletion\n    const handleDelete = (productId) => {\n        if (!window.confirm('Are you sure you want to delete this product?')) {\n            return; // Stop if the user cancels\n        }\n        \n        const url = `${API_URL}/delete-product/${productId}`;\n    \n        axios.delete(url)\n            .then((res) => {\n                if (res.data.message === 'Product deleted successfully') {\n                    alert('Product deleted.');\n                    setProducts(prevProducts => prevProducts.filter(item => item._id !== productId));\n                    setCProducts(prevCProducts => prevCProducts.filter(item => item._id !== productId));\n                } else {\n                    alert(res.data.message);\n                }\n            })\n            .catch((err) => {\n                alert('Server Error. Please try again later.');\n            });\n    };\n\n    return (\n        <div>\n            <Header search={search} handleSearch={handleSearch} handleClick={handleClick} />\n            <Categories handleCategory={handleCategory} />\n\n\n            <h5> ALL RESULTS </h5>\n\n            <div className=\"d-flex justify-content-center flex-wrap\">\n                {products && products.length > 0 &&\n                    products.map((item, index) => (\n                        <div key={item._id} className=\"card m-3\">\n                            <div className=\"icon-con\">\n                                <FaTrash className=\"icons text-danger\" style={{ marginLeft: \"10px\" }} onClick={() => handleDelete(item._id)} />\n                            </div>\n                            <img width=\"280px\" height=\"250px\" src={`${API_URL}/uploads/${item.pimage}`} alt=\"Product\" />\n                            <p className=\"m-2\"> {item.pname} | {item.category} </p>\n                            <h3 className=\"m-2 text-danger\"> ${item.price} </h3>\n                            <p className=\"m-2 text-success\"> {item.pdesc} </p>\n                        </div>\n                    ))}\n            </div>\n        </div>\n    )\n}\n\nexport default MyProducts;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { FaTrash } from 'react-icons/fa';\nimport Header from '../Layout/Header';\nimport API_URL from \"../constants\";\n\nimport { Link, Redirect } from 'react-router-dom';  // Using Redirect from react-router-dom v5\n\nfunction SearchResults() {\n    const { searchQuery } = useParams();\n    const [products, setProducts] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const url = `http://localhost:4000/api/products/search?search=${encodeURIComponent(searchQuery)}`;\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(\"he\",data)\n            try {\n                const response = await fetch(url);\n                const data = await response.json();\n                if (response.ok) {\n                    setProducts(data.products);\n                } else {\n                    console.error('Failed to fetch products:', data.message);\n                }\n            } catch (error) {\n                console.error('Error fetching products:', error);\n            }\n        };\n\n        fetchData();\n    }, [searchQuery]);\n\n    const handleDelete = (productId) => {\n        if (!window.confirm('Are you sure you want to delete this product?')) return;\n        console.log('Delete product', productId);\n        // Implement delete logic here\n    };\n\n    const handleProductClick = (id) => {\n        //navigate(`/product/${id}`);\n    };\n\n    return (\n        <>\n              <Header/>\n              <div className=\"d-flex justify-content-center flex-wrap\">\n                {products.map((product, index) => (\n                    console.log(`${API_URL}/uploads/${product.pimage}`),\n                    <div key={product._id} className=\"card m-3\" onClick={() => handleProductClick(product._id)}>\n                       \n                       <Link to={`/product/${product._id}`}>\n                            <img width=\"280px\" height=\"250px\" src={`${API_URL}/uploads/${product.pimage}`} alt={product.pname} />\n                        </Link>\n                        <h3 className=\"m-2 price-text\">{product.pname} </h3>\n                        <h3 className=\"m-2 price-text\">${product.price} </h3>\n                        <p className=\"m-2\">{product.category}</p>\n                        <p className=\"m-2 text-success\">{product.pdesc}</p>\n                    </div>\n                ))}\n                {products.length === 0 && <h5>No Products Found</h5>}\n            </div>\n        </>\n    );\n}\n\nexport default SearchResults;\n","import React, { useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport API_URL from '../constants';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\n\nimport './ReportForm.css'; // Import the CSS file for styling\n\nfunction ReportForm() {\n    const history = useHistory();\n    const { sellerId } = useParams(); // This is the reportedUserId\n    const [reason, setReason] = useState('');\n    const userId = localStorage.getItem('userId'); // Fetching userId from local storage\n\n    const handleReportSubmit = async () => {\n        console.log(`Report for seller ${sellerId} with reason: ${reason}`);\n    \n        if (!sellerId || !reason) {\n            alert('All fields are required.');\n            return;\n        }\n    \n        const url = `${API_URL}/api/reports/report/${sellerId}`; // Make sure this matches the backend endpoint\n    \n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                reportedUserId: sellerId,\n                message: reason\n            })\n        });\n    \n        const data = await response.json();\n    \n        if (response.status === 201) {\n            alert('Report submitted successfully!');\n            history.push('/'); // Redirect to home or another appropriate page after submission\n        } else {\n            alert(`Failed to submit report: ${data.message}`);\n        }\n    };\n\n    return (\n        <div className=\"report-form-container\">\n     \n            <h1 className=\"report-form-title\">\n            <FontAwesomeIcon icon={faExclamationCircle} /> Report Seller</h1>\n            <textarea\n                className=\"report-form-textarea\"\n                value={reason}\n                onChange={(e) => setReason(e.target.value)}\n                placeholder=\"Describe the issue\"\n                rows=\"5\"\n                cols=\"33\"\n            />\n            <button className=\"report-form-button\" onClick={handleReportSubmit}>Submit Report</button>\n        </div>\n    );\n}\n\nexport default ReportForm;\n","import React, { useState, useEffect } from 'react';\nimport Header from '../Layout/Header';\n\nconst ReportsPage = () => {\n    const [reports, setReports] = useState([]);\n\n    useEffect(() => {\n        const userId = localStorage.getItem('userId');\n        console.log(userId)\n        const fetchReports = async () => {\n            const response = await fetch(`http://localhost:4000/api/reports/get-reports/${userId}`);\n            const data = await response.json();\n            console.log(data)\n            setReports(data);\n        };\n\n        fetchReports();\n    }, []);\n\n    return (\n        <div>\n            <Header/>\n            <style>\n                {`\n                    .report-table {\n                        width: 100%;\n                        border-collapse: collapse;\n                        margin-top: 20px;\n                        box-shadow: 0 2px 3px rgba(0,0,0,0.1);\n                    }\n                    .report-table th, .report-table td {\n                        padding: 12px 15px;\n                        text-align: left;\n                        border-bottom: 1px solid #ddd;\n                    }\n                    .report-table th {\n                        background-color: black;\n                        color: white;\n                    }\n                    .report-table tbody tr:nth-child(even) {\n                        background-color: #f2f2f2;\n                    }\n                    .report-table tbody tr:hover {\n                        background-color: #ddd;\n                    }\n                    @media screen and (max-width: 600px) {\n                        .report-table th, .report-table td {\n                            padding: 10px;\n                        }\n                    }\n                `}\n            </style>\n            <h1>All Reports</h1>\n            <table className=\"report-table\">\n                <thead>\n                    <tr>\n                        <th>Report ID</th>\n                        <th>Message</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reports.map(report => (\n                        <tr key={report._id}>\n                            <td>{report._id}</td>\n                            <td>{report.message}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n};\n\nexport default ReportsPage;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Header from \"../Layout/Header\";\nimport { useParams, Redirect } from \"react-router-dom\"; // Import Redirect\nimport axios from \"axios\";\nimport Categories from \"./Categories\";\nimport { FaHeart } from \"react-icons/fa\";\nimport API_URL from \"../constants\";\n\nfunction CategoryPage() {\n    const { catName } = useParams();\n\n    const [products, setProducts] = useState([]);\n    const [filteredProducts, setFilteredProducts] = useState([]);\n    const [search, setSearch] = useState('');\n    const [isSearch, setIsSearch] = useState(false);\n    const [redirectToProduct, setRedirectToProduct] = useState(null); // State variable for redirection\n\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const url = catName === 'All Categories' ? API_URL + '/api/products/get-products' : API_URL + '/api/products/get-products?catName=' + catName;\n                const response = await axios.get(url);\n                if (response.data.products) {\n                 \n\n                    setProducts(response.data.products);\n                    setFilteredProducts(response.data.products); // Default to showing all products\n                }\n            } catch (error) {\n                alert('Server Err.');\n            }\n        };\n        fetchProducts();\n    }, [catName]);\n\n    const handleSearchChange = (value) => {\n        setSearch(value);\n    };\n\n    const handleSearchClick = async () => {\n        setIsSearch(true);\n        try {\n            const url = API_URL + '/search?search=' + search;\n            const response = await axios.get(url);\n            setFilteredProducts(response.data.products);\n        } catch (error) {\n            alert('Server Err.');\n        }\n    };\n\n    const handleCategory = (category) => {\n        if (category === 'All Categories') {\n            setFilteredProducts(products);\n        } else {\n            const newFilteredProducts = products.filter(product => product.category === category);\n            setFilteredProducts(newFilteredProducts);\n        }\n    };\n\n    const handleLike = async (productId) => {\n        let userId = localStorage.getItem('userId');\n        if (!userId) {\n            alert('Please Login first.');\n            return;\n        }\n        try {\n            const url = API_URL + '/like-product';\n            const data = { userId, productId };\n            const response = await axios.post(url, data);\n            if (response.data.message) {\n                alert('Liked.');\n            }\n        } catch (error) {\n            alert('Server Err.');\n        }\n    };\n\n    const handleProductClick = (id) => {\n        setRedirectToProduct('/product/' + id); // Set the redirection path\n    };\n\n    if (redirectToProduct) {\n        return <Redirect to={redirectToProduct} />; // Redirect if redirectToProduct is set\n    }\n\n    return (\n        <div>\n            <Header search={search} handleSearchChange={handleSearchChange} handleSearchClick={handleSearchClick} />\n            <Categories handleCategory={handleCategory} />\n            \n            {isSearch && (\n                <h5> SEARCH RESULTS\n                    <button className=\"clear-btn\" onClick={() => setIsSearch(false)}> CLEAR </button>\n                </h5>\n            )}\n\n            {isSearch && filteredProducts.length === 0 && <h5> No Results Found </h5>}\n\n            <div className=\"d-flex justify-content-center flex-wrap\">\n                {filteredProducts.map(product => (\n                    <div key={product._id} className=\"card m-3\" onClick={() => handleProductClick(product._id)}>\n                        <img width=\"280px\" height=\"250px\" src={API_URL + '/' + product.pimage} alt={product.pname} />\n                        <h3 className=\"m-2 price-text\"> $ {product.price} </h3>\n                        <p className=\"m-2\"> {product.pname} | {product.category} </p>\n                        <p className=\"m-2 text-success\"> {product.pdesc} </p>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default CategoryPage;\n","import React from 'react';\nimport { Router, Route } from 'react-router-dom';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { SnackbarProvider } from 'notistack';\nimport history from './Utilities/history';\nimport PrivateRoute from './Utilities/private-route';\nimport Home from './Home/Home';\nimport Chat from './Chat/Chat';\nimport Home2 from './components/Home2'\nimport AddProduct from './components/AddProduct';\nimport ProductDetail from './components/ProductDetail'\nimport MyProducts from './components/MyProducts';\nimport SearchResults from './components/SearchResults';\nimport ReportForm from './components/ReportForm';\nimport ReportsPage from './components/ReportsPage';\nimport Categories from './components/CategoryPage';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#58a5f0',\n            main: '#0277bd',\n            dark: '#004c8c',\n        },\n        secondary: {\n            light: '#ffd95a',\n            main: '#f9a825',\n            dark: '#c17900',\n            contrastText: '#212121',\n        },\n        background: {\n            default: '#f0f0f0',\n        },\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <SnackbarProvider maxSnack={3} autoHideDuration={3000}>\n                <Router history={history}>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/home\" exact component={Home2} />\n                <PrivateRoute path=\"/chat\" component={Chat} />\n                <Route path=\"/add-product\" exact component={AddProduct} />\n                <Route path=\"/product/:productId\" exact component={ProductDetail} />\n                <Route path=\"/my-products/:userId\" exact component={MyProducts} />\n                <Route path=\"/search-results/:searchQuery\" exact component={SearchResults} />\n                <Route path=\"/report/:sellerId\"  exact component={ReportForm} />\n                <Route path=\"/reports/:userId\" exact component={ReportsPage}/>\n                <Route path=\"/category/:category\" exact component={Categories}/>\n                \n\n\n                \n\n\n\n\n                </Router>\n            </SnackbarProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n/*\n   <Route path=\"/\" exact component={Home} />\n                    <PrivateRoute path=\"/chat\" component={Chat} />\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}